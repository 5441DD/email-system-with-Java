/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cp2project;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author aaa
 */
public class MailDetailScreen extends javax.swing.JFrame {

    /**
     * Creates new form MailDetailScreen
     */
    
    /*
    This frame has 3 constructor to different situations. One of them is not taking any parameter. Other constructor is taking id parameter ti identify mail from its id.
    Third constructor is taking mail content, fromwho and towho paramaters to identfy mail and write to the labels and textarea.
    */
    public MailDetailScreen() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        
    }
    public MailDetailScreen(int id) {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        try {
            
            ResultSet rs=DatabaseManagement.SearchMailById(id);
            while (rs.next()) {
                label_fromwho.setText(rs.getString("frommail"));
                label_towho.setText(rs.getString("tomail"));
                label_time.setText(rs.getTimestamp("timestamp").toString());
                jTextArea1.setText(rs.getString("text"));
                
                
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
    }
    public MailDetailScreen(String textmail,String fromwho,String towho) {
        initComponents();
        try {
            
            ResultSet rs=DatabaseManagement.SearchByMailAll(textmail, fromwho, towho);
            while (rs.next()) {
                label_fromwho.setText(rs.getString("frommail"));
                label_towho.setText(rs.getString("tomail"));
                label_time.setText(rs.getTimestamp("timestamp").toString());
                jTextArea1.setText(rs.getString("text"));
                
                
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_fromwho = new javax.swing.JLabel();
        label_towho = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        label_time = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        button_delete = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mail Details");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        label_fromwho.setForeground(new java.awt.Color(255, 255, 255));
        label_fromwho.setText("a");

        label_towho.setForeground(new java.awt.Color(255, 255, 255));
        label_towho.setText("jLabel1");

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        label_time.setForeground(new java.awt.Color(255, 255, 255));
        label_time.setText("jLabel1");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sender:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("To who:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Time");

        button_delete.setText("Delete");
        button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_deleteActionPerformed(evt);
            }
        });

        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Edit");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_fromwho, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_towho, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label_time, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_delete)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_fromwho)
                    .addComponent(label_towho)
                    .addComponent(label_time)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(3, 3, 3)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_delete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_deleteActionPerformed
        //burada b'r mantik hatasi olabilir cunku eger ayni mail ayni kisiye atilmissa sikinti
        //Asks user if user is sure to delete the mail.
        int result=JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete the mail?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if(result==JOptionPane.YES_OPTION){
        String txt = jTextArea1.getText();
        //Searches mail by its content and mail that you sent.
        ResultSet rs = DatabaseManagement.SearchByTextFrommail(txt, Homescreen.user.getMail());
        try {
            
            //Deletes the mail and informs the user if it is deleted, not deleted or not found.
            if(rs.next()) {
                int id=rs.getInt("id");
                boolean truth_value=DatabaseManagement.DeleteMailById(id);
                if (truth_value) {
                    JOptionPane.showMessageDialog(rootPane, "Succesfuly deleted.");
                    setVisible(false);
                }else
                    JOptionPane.showMessageDialog(rootPane, "Cannot deleted.");
            }else
                JOptionPane.showMessageDialog(rootPane, "Mail could not found.");
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        }
    }//GEN-LAST:event_button_deleteActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        //Changes textarea editable or not.
        if (jCheckBox1.isSelected()) {
            jTextArea1.setEditable(true);    
        }else{
            jTextArea1.setEditable(false);
        }
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_delete;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel label_fromwho;
    private javax.swing.JLabel label_time;
    private javax.swing.JLabel label_towho;
    // End of variables declaration//GEN-END:variables
}
