/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cp2project;

import java.sql.ResultSet;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmet
 */
public class AdvancedSearchScreen extends javax.swing.JFrame {

    Timestamp timestamp = new Timestamp(System.currentTimeMillis());
    SpinnerDateModel model = new SpinnerDateModel();
    String[] columnNames = {"Mail Content", "Sender", "Recipient", "Time"};
    Object[][] emptyData = {};
    DefaultTableModel tblmodel = new DefaultTableModel(emptyData, columnNames);

    /**
     * Creates new form AdvancedSearchScreen
     */
    public AdvancedSearchScreen() {
        initComponents();
        if (Homescreen.user instanceof AdminUser) {
            tblmodel.addColumn("Is draft");
        }
        jTable1.setModel(tblmodel);

        model.setValue(timestamp);
        spinner.setModel(model);
        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, "yyyy-MM-dd HH:mm:ss");
        spinner.setEditor(editor);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        checkbox_newer = new javax.swing.JCheckBox();
        checkbox_older = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        spinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Advanced Search");

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(checkbox_newer);
        checkbox_newer.setText("Newer than this date");

        buttonGroup1.add(checkbox_older);
        checkbox_older.setText("Older than this date");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(checkbox_newer)
                .addGap(18, 18, 18)
                .addComponent(checkbox_older)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(337, Short.MAX_VALUE)
                .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(335, 335, 335))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkbox_newer)
                    .addComponent(checkbox_older))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tblmodel.setRowCount(0);
        boolean newer = checkbox_newer.isSelected();
        boolean older = checkbox_older.isSelected();
        java.util.Date date = (java.util.Date) spinner.getValue();
    
    // Convert the java.util.Date to java.sql.Timestamp
    Timestamp timestamp = new Timestamp(date.getTime());
    ResultSet rs;
    
        if (Homescreen.user instanceof RegularUser) {
            

            try {
                    if (newer) {
                        rs=DatabaseManagement.SearchMailByTimeN(timestamp, Homescreen.user.getMail());

                        while (rs.next()) {
                            if (rs.getInt("is_draft") != 1) {
                                String textMail = rs.getString("text");
                                String fromMail = rs.getString("frommail");
                                String toMail = rs.getString("tomail");
                                String time=rs.getString("timestamp");
                                tblmodel.addRow(new Object[]{textMail, fromMail, toMail,time});
                            }
                        }
                    } else if (older) {
                        rs = DatabaseManagement.SearchMailByTimeO(timestamp, Homescreen.user.getMail());
                        while (rs.next()) {
                            if (rs.getInt("is_draft") != 1) {
                                String textMail = rs.getString("text");
                                String fromMail = rs.getString("frommail");
                                String toMail = rs.getString("tomail");
                                String time=rs.getString("timestamp");
                                tblmodel.addRow(new Object[]{textMail, fromMail, toMail,time});
                            }
                        }
                    }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
            }
        }else
            try {
                    if (newer) {
                        rs=DatabaseManagement.AdminSearchMailByTimeN(timestamp);

                        while (rs.next()) {
                            if (rs.getInt("is_draft") != 1) {
                                String textMail = rs.getString("text");
                                String fromMail = rs.getString("frommail");
                                String toMail = rs.getString("tomail");
                                String str;
                                if (rs.getInt("is_draft")!=1) {
                                str="No";
                                }else
                                str="Yes";
                                String time=rs.getString("timestamp");
                                tblmodel.addRow(new Object[]{textMail, fromMail, toMail,time,str});
                            }
                        }
                    } else if (older) {
                        rs = DatabaseManagement.AdminSearchMailByTimeO(timestamp);
                        while (rs.next()) {
                            
                                String textMail = rs.getString("text");
                                String fromMail = rs.getString("frommail");
                                String toMail = rs.getString("tomail");
                                String str;
                                if (rs.getInt("is_draft")!=1) {
                                str="No";
                                }else
                                str="Yes";
                                String time=rs.getString("timestamp");
                                tblmodel.addRow(new Object[]{textMail, fromMail, toMail,time,str});
                            
                        }
                    }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
            }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkbox_newer;
    private javax.swing.JCheckBox checkbox_older;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner spinner;
    // End of variables declaration//GEN-END:variables
}
