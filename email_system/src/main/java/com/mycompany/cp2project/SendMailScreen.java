/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.cp2project;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ahmet
 */
public class SendMailScreen extends javax.swing.JFrame {

    /**
     * Creates new form SendMailScreen
     */
    
    
    /*
    This frame has 2 constructor. One of the is not taking any parameter, it is used on normal sen mail function.
    Other constructor is taking mail content paramater and writes it to the textarea.
    */
    public SendMailScreen() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    //method overload
    public SendMailScreen(String text) {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        textarea_mailtext.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textfield_towho = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea_mailtext = new javax.swing.JTextArea();
        button_send = new javax.swing.JButton();
        button_savedraft = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compose Mail");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setText("To Who");

        textarea_mailtext.setColumns(20);
        textarea_mailtext.setRows(5);
        jScrollPane1.setViewportView(textarea_mailtext);

        button_send.setText("Send");
        button_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sendActionPerformed(evt);
            }
        });

        button_savedraft.setText("Save as draft");
        button_savedraft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_savedraftActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(button_savedraft)
                                .addGap(314, 314, 314)
                                .addComponent(button_send))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(textfield_towho, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textfield_towho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_send)
                    .addComponent(button_savedraft))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sendActionPerformed
        try{
            if(!(textarea_mailtext.equals(""))&&!(textfield_towho.equals(""))){
        ResultSet rset=null;
        String fromwho=null;
        String towho = textfield_towho.getText();
        String mailtext = textarea_mailtext.getText();
        
            
            try {
                rset=DatabaseManagement.SearchByEmail(Homescreen.user.getMail());
                while (rset.next()) {
                    if (rset!=null) {
                 fromwho = rset.getString("mail");
                }
                
            }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
             // Takes date and time data on system.
        long currentTimeMillis = System.currentTimeMillis();
        
        //Divides to 1000 to avoid from miliseconds.
        long seconds = currentTimeMillis / 1000;
        
        
        Timestamp timestamp = new Timestamp(seconds * 1000);
            
            //Adds mail to database table and inform user if it is sended or not.
            boolean issend =DatabaseManagement.AddMail(mailtext, towho, fromwho,0,timestamp);
            if(issend){
                JOptionPane.showMessageDialog(rootPane, "Your mail succesfuly sended");
            }else
                JOptionPane.showMessageDialog(rootPane, "Your mail cannot sended");
        }else
                JOptionPane.showMessageDialog(rootPane, "Text Field and Text Area cannot be empty");
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_button_sendActionPerformed

    private void button_savedraftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_savedraftActionPerformed
        try{
            if(!(textarea_mailtext.equals(""))&&!(textfield_towho.equals(""))){
        ResultSet rset=null;
        String fromwho=null;
        String towho = textfield_towho.getText();
        String mailtext = textarea_mailtext.getText();
        
            
            try {
                rset=DatabaseManagement.SearchByEmail(Homescreen.user.getMail());
                while (rset.next()) {
                    if (rset!=null) {
                 fromwho = rset.getString("mail");
                }
                
            }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
             // Takes date and time data on system.
        long currentTimeMillis = System.currentTimeMillis();
        
        //Divides to 1000 to avoid from miliseconds.
        long seconds = currentTimeMillis / 1000;
        
        
        Timestamp timestamp = new Timestamp(seconds * 1000);
        
            //Adds mail to database to table as a draft and inform user if it is sended or not.
            boolean issend =DatabaseManagement.AddMail(mailtext, towho, fromwho,1,timestamp);
            if(issend){
                JOptionPane.showMessageDialog(rootPane, "Your mail succesfuly saved as draft");
            }else
                JOptionPane.showMessageDialog(rootPane, "Your cannot saved as draft");
        }else
                JOptionPane.showMessageDialog(rootPane, "Text Field and Text Area cannot be empty");
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_button_savedraftActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_savedraft;
    private javax.swing.JButton button_send;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textarea_mailtext;
    private javax.swing.JTextField textfield_towho;
    // End of variables declaration//GEN-END:variables
}
